# School Management System - Spring Boot + Thymeleaf

## 🧱 Project Setup Guide

### Step 1: Unzip the Project
1. Download and unzip the file: `school-management-system-thymeleaf.zip`
2. Open the folder in your IDE (IntelliJ IDEA / VS Code / Eclipse).

### Step 2: Folder Structure Overview

```
school-management-system-thymeleaf/
│
├── pom.xml
├── src/
│   ├── main/
│   │   ├── java/com/schoolmanagement/
│   │   │   ├── SchoolManagementApplication.java
│   │   │   ├── entity/
│   │   │   ├── repository/
│   │   │   ├── service/
│   │   │   └── controller/
│   │   └── resources/
│   │       ├── application.properties
│   │       └── templates/
│   └── test/
│
└── README.txt
```

### Step 3: Database Setup (MySQL)
1. Open your MySQL command line or MySQL Workbench.
2. Create a new database with this command:
   ```sql
   CREATE DATABASE schooldb;
   ```
3. Open the file `src/main/resources/application.properties` and update your credentials:
   ```properties
   spring.datasource.url=jdbc:mysql://localhost:3306/schooldb
   spring.datasource.username=YOUR_USERNAME
   spring.datasource.password=YOUR_PASSWORD
   ```

### Step 4: Install Dependencies
If you are using Maven, open a terminal inside the project folder and run:
```bash
mvn clean install
```

### Step 5: Run the Project
Run the Spring Boot project using one of the following methods:

**Using Command Line:**
```bash
mvn spring-boot:run
```

**OR Using IntelliJ IDEA:**
- Open `SchoolManagementApplication.java`
- Right-click → **Run 'SchoolManagementApplication'**

### Step 6: Access the Web Application
Once the server starts successfully, open your web browser and go to:

👉 `http://localhost:8080`

You’ll see the **Main Dashboard** with 3 buttons:
- Students
- Teachers
- Classes

### Step 7: Use the Application

**1️⃣ Manage Students**
- Go to `http://localhost:8080/students`
- Add new students by entering name and email.
- Delete students using the delete button.

**2️⃣ Manage Teachers**
- Go to `http://localhost:8080/teachers`
- Add new teachers with name and subject.
- Delete teachers as needed.

**3️⃣ Manage Classes**
- Go to `http://localhost:8080/classes`
- Add new class names.
- Delete classes.

### Step 8: Database Auto-Creation
Spring Boot automatically creates tables (`student`, `teacher`, `class_room`) based on the entity classes.

### Step 9: Stop the Server
To stop the running application:
```bash
CTRL + C
```

---

## ✅ Summary
- Fully working CRUD application for Students, Teachers, and Classes.
- Uses Spring Boot, JPA, MySQL, and Thymeleaf frontend.
- Accessible via localhost:8080.

---

© 2025 School Management System | Created for educational use.
